package com.investec.expd.model;
// Generated 02 Dec 2016 9:27:23 PM by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Idea generated by hbm2java
 */
@Entity
@Table(name = "idea")
@NamedQueries({ 
	@NamedQuery(name = "idea.FindAll", query = "select u from Idea u"), 
	})
public class Idea implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 6284169292169359827L;
	private int ideaId;
	private User user;
	private String ideaName;
	private String description;
	private BigDecimal roi;
	private Date dueDate;
	private String roidescription;
	private Integer votes;
	private Set<Ideaskills> ideaskillses = new HashSet<Ideaskills>(0);
	private Set<Tasks> taskses = new HashSet<Tasks>(0);	
	private Set<Mappings> mappingses = new HashSet<Mappings>(0);
	private Set<Notes> noteses = new HashSet<Notes>(0);

	public Idea() {
	}

	public Idea(int ideaId, User user, String ideaName) {
		this.ideaId = ideaId;
		this.user = user;
		this.ideaName = ideaName;
	}

	public Idea(int ideaId, User user, String ideaName, String description, BigDecimal roi, Date dueDate,
			String roidescription, Integer votes, Set<Ideaskills> ideaskillses, Set<Tasks> taskses,
			Set<Mappings> mappingses, Set<Notes> noteses) {
		this.ideaId = ideaId;
		this.user = user;
		this.ideaName = ideaName;
		this.description = description;
		this.roi = roi;
		this.dueDate = dueDate;
		this.roidescription = roidescription;
		this.votes = votes;
		this.ideaskillses = ideaskillses;
		this.taskses = taskses;		
		this.mappingses = mappingses;
		this.noteses = noteses;
	}

	@Id

	@Column(name = "IdeaID", unique = true, nullable = false)
	public int getIdeaId() {
		return this.ideaId;
	}

	public void setIdeaId(int ideaId) {
		this.ideaId = ideaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "OwnerID", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "IdeaName", nullable = false, length = 50)
	public String getIdeaName() {
		return this.ideaName;
	}

	public void setIdeaName(String ideaName) {
		this.ideaName = ideaName;
	}

	@Column(name = "Description", length = 100)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "ROI", scale = 4)
	public BigDecimal getRoi() {
		return this.roi;
	}

	public void setRoi(BigDecimal roi) {
		this.roi = roi;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "DueDate", length = 19)
	public Date getDueDate() {
		return this.dueDate;
	}

	public void setDueDate(Date dueDate) {
		this.dueDate = dueDate;
	}

	@Column(name = "ROIDescription", length = 100)
	public String getRoidescription() {
		return this.roidescription;
	}

	public void setRoidescription(String roidescription) {
		this.roidescription = roidescription;
	}

	@Column(name = "Votes")
	public Integer getVotes() {
		return this.votes;
	}

	public void setVotes(Integer votes) {
		this.votes = votes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<Ideaskills> getIdeaskillses() {
		return this.ideaskillses;
	}

	public void setIdeaskillses(Set<Ideaskills> ideaskillses) {
		this.ideaskillses = ideaskillses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<Tasks> getTaskses() {
		return this.taskses;
	}

	public void setTaskses(Set<Tasks> taskses) {
		this.taskses = taskses;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<Mappings> getMappingses() {
		return this.mappingses;
	}

	public void setMappingses(Set<Mappings> mappingses) {
		this.mappingses = mappingses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "idea")
	public Set<Notes> getNoteses() {
		return this.noteses;
	}

	public void setNoteses(Set<Notes> noteses) {
		this.noteses = noteses;
	}

}
